name: create_release
# This workflow:
# 1. Allows to enter the new version that we want to generate.
# 2. Runs the bash script to update the SDK version in the required files.
# 3. Creates a new branch with the SDK version updated like: releases/RELEASE-1.0.0
# 4. Merges the created branch into master.
# 5. Creates a new release on GitHub with the new Version name. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'SDK Version'     
        required: true
        default: '0.0.0'
jobs:
  tests:
    name: create_release
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Select Xcode Version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Install Pods
      run:  |
          pod install
    # Update new version
    - shell: bash
      env:
          SDK_VERSION: ${{ github.event.inputs.version }}
      run:  |
          sh scripts/setup_version.sh -v "$SDK_VERSION"
    # Branches handling
    - name: Git sequence
      env:
          SDK_VERSION: ${{ github.event.inputs.version }}
      run: |
          git branch releases/RELEASE-"$SDK_VERSION"
          git checkout releases/RELEASE-"$SDK_VERSION"
          git status
          git add TelnyxRTC.podspec
          git add TelnyxRTC.xcodeproj/project.pbxproj
          git add docs/
          git commit -m "Release v$SDK_VERSION"
          git push --set-upstream origin releases/RELEASE-"$SDK_VERSION"
          git checkout main
          git fetch
          git pull
          git merge releases/RELEASE-"$SDK_VERSION"
          git push
    # Release creation
    - name: Create GH Release
      id: release
      uses: zendesk/action-create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }} 
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        body: |
          - SDK version updated.
        draft: false
        prerelease: false